library (phyclust)
library(ape)
library(adegenet)
library(ips)
library(ggplot2)
library(ggtree)
library(heatmaply)
#webshot::install_phantomjs() for writing heatmaply files

setwd("~/Desktop/UK_DRI/Manuscripts/Malaria/Data")

#########   EXTRACTION SEQUENCE AND HAPLOTYPE INFORMATION    ###############
my.snp <- read.phylip("MSP-1_19.phy", code.type ="NUCLEOTIDE")
#  fetching the sequences from alignment in
#PHYLIP format and stores them in my.snp variable in a list of objects

ret <- haplo.post.prob(my.snp$org, ploidy = 1)
# haplo.post.prob() function was not working, raised issue on Github, see my issue, 
# then changed updated the code using <trace(get.medBB.skip.fun, edit = T)>
# The haplo.post.prob function runs the clustering process and stores list of objects in ret.
pdf("haplotype_frequency.pdf", width = 13, height = 9, pointsize=18)#save as pdf file
getcut.fun(sort(ret$haplo$hap.prob, decreasing =TRUE), 
                     nn = my.snp$nseq, plot = 1)
# The getcut.fun truncates the evolutionary significant haplotypes and the plots a graph
dev.off()

write.fasta(ret$haplo$haplotype, "haplotypes.fas")
#haplotypes translated to amino -acid sequence in MEGA, and haplotypes renamed.. file haplotype_amino.fas
##########   PLOTTING OF ALIGNMENT HAPLOTYPE TREES   ############### 
nbin<-fasta2DNAbin("haplotypes_AA_names.fas")
nbin<-trimEnds(nbin)#no need to trim, haplotypes are of same length
an<-as.alignment(nbin)
nm<-as.matrix(an) 
nbinmat<-as.matrix(labels(nbin))
class(nbin)
dnbin<-dist.dna(nbin, model = "K80")
tree<-njs(dnbin)
ggt<-ggtree(tree, cex = 0.8, aes(color=branch.length))+scale_color_continuous(high='lightskyblue1',low='coral4')+geom_tiplab(align=TRUE, size=5)+geom_treescale(y = -1, color = "coral4", fontsize = 7)
njmsaplot<-msaplot(ggt, nbin, offset = 0.009, width=1, height = 0.5, color = c(rep("rosybrown", 1), rep("sienna1", 1), rep("lightgoldenrod1", 1), rep("lightskyblue1", 1)))



pdf("haplotype_tree.pdf", width = 11, height = 9, paper = "a4", pointsize=15)#save as pdf file
njmsaplot
dev.off()


############### HAPLOTYPE CORRELATIONS HEAT MAPS ###########################
sat2 <- NULL
for (i in 1:nrow(nm)) {
  sat2[i] <- paste(nm[i, ], collapse="")
}

sat2 <- toupper(sat2)
sat3 <- unique(sat2)
comat = matrix(nrow=length(sat3), ncol=length(sat3))
for (i in 1:length(sat3)) { 
  si <- sat3[i]
  for (j in 1:length(sat3)) { 
    sj <- sat3[j]
    difcnt = 0
    s1 = as.vector(strsplit(as.character(si), ""))
    s2 = as.vector(strsplit(as.character(sj), ""))
    for (k in 1:length(s1[[1]])) {
      if (s1[[1]][k] != s2[[1]][k]) {
        difcnt = difcnt + 1
      }
      comat[i, j] = difcnt
      #print(paste(i, " ", j, " ", difcnt))
    }
  }
}
#comat	is Hamming distance matrix
colnames(comat)<-nbinmat

heatmap<-heatmaply_cor(cor(comat), file= "heatmap.pdf",  xlab= "haplotypes", ylab="haplotypes",
              k_col=3,
              k_row=3, margins =c(10,10,15), fontsize_row = 8,
              fontsize_col = 8)

rm(heatmap)


library("tidyverse")

hap_den<- readxl::read_xlsx("Haplotype Distribution.xlsx", col_names = TRUE)
hap_den<-rbind(hap_den)

den<-ggplot(hap_den, aes(y= Frequency, x=Episodes)) +
  stat_smooth(aes(group= Haplotype, color= Haplotype, fill=Haplotype), method ="loess", size=2, formula="y ~ log(x)", se=FALSE) +
  labs(x="Infection episodes", y = "Frequency")+ #facet_grid(Haplotype ~ .)+
  theme_classic(base_size = 10) +
  theme(aspect.ratio=1/2.5)+theme(text = element_text(size = 20))

pdf("haplotype_distribution.pdf", width = 11, height = 6, pointsize=30)#save as pdf file
den
dev.off()


